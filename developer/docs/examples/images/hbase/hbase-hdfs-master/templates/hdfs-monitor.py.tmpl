import sys
import urllib2
import json

HBASE_ROLE_MASTER = "hbase-master"
HBASE_DFS_ROLE_MASTER = "hbase-hdfs-master"
HBASE_ROLE_SLAVE = "hbase-slave"


def parse_hbase_stat(role, hjson):
  if "beans" not in hjson:
    return
  stats = {}
  if role == HBASE_ROLE_MASTER:
    for sub_dict in hjson["beans"]:
      if "name" in sub_dict and sub_dict["name"] == "Hadoop:service=HBase,name=Master,sub=AssignmentManger":
        if "ritCount" in sub_dict:
          stats["ritCount"] = sub_dict["ritCount"]
          return stats
  elif role == HBASE_ROLE_SLAVE:
    for sub_dict in hjson["beans"]:
      if "name" in sub_dict and sub_dict["name"] == "Hadoop:service=HBase,name=RegionServer,sub=Server":
        stats["readRequestCount"] = sub_dict["readRequestCount"]
        stats["writeRequestCount"] = sub_dict["writeRequestCount"]
        stats["blockCacheHitCount"] = sub_dict["blockCacheHitCount"]
        stats["blockCacheCountHitPercent"] = str(float(sub_dict["blockCacheCountHitPercent"]) * 100)
        stats["slowDeleteCount"] = sub_dict["slowDeleteCount"]
        stats["slowIncrementCount"] = sub_dict["slowIncrementCount"]
        stats["slowGetCount"] = sub_dict["slowGetCount"]
        stats["slowAppendCount"] = sub_dict["slowAppendCount"]
        stats["slowPutCount"] = sub_dict["slowPutCount"]
      if "name" in sub_dict and sub_dict["name"] == "Hadoop:service=HBase,name=JvmMetrics":
        stats["GcTimeMillisConcurrentMarkSweep"] = sub_dict["GcTimeMillisConcurrentMarkSweep"]
    return stats
  elif role == HBASE_DFS_ROLE_MASTER:
    for sub_dict in hjson["beans"]:
      if "name" in sub_dict and sub_dict["name"] == "Hadoop:service=NameNode,name=NameNodeActivity":
        stats["FilesCreated"] = sub_dict["FilesCreated"]
        stats["FilesAppended"] = sub_dict["FilesAppended"]
        stats["FilesRenamed"] = sub_dict["FilesRenamed"]
        stats["FilesDeleted"] = sub_dict["FilesDeleted"]
      if "name" in sub_dict and sub_dict["name"] == "Hadoop:service=NameNode,name=FSNamesystem":
        stats["CapacityTotalGB"] = sub_dict["CapacityTotalGB"]
        stats["UsedGB"] = sub_dict["CapacityUsedGB"]
        stats["RemainingGB"] = sub_dict["CapacityRemainingGB"]
        stats["FilesTotal"] = sub_dict["FilesTotal"]
      if "name" in sub_dict and sub_dict["name"] == "Hadoop:service=NameNode,name=FSNamesystemState":
        stats["LiveNodes"] = sub_dict["NumLiveDataNodes"]
        stats["DeadNodes"] = sub_dict["NumDeadDataNodes"]
        stats["DecomLiveNodes"] = sub_dict["NumDecomLiveDataNodes"]
        stats["DecomDeadNodes"] = sub_dict["NumDecomDeadDataNodes"]
        stats["DecommissioningNodes"] = sub_dict["NumDecommissioningDataNodes"]
        stats["StaleNodes"] = sub_dict["NumStaleDataNodes"]
        stats["StaleStorages"] = sub_dict["NumStaleStorages"]
      if "name" in sub_dict and sub_dict["name"] == "Hadoop:service=NameNode,name=NameNodeInfo":
        stats["PercentUsed"] = sub_dict["PercentUsed"]
        stats["PercentRemaining"] = sub_dict["PercentRemaining"]
    return stats

if __name__ == '__main__':
  ip = '{{getv "/host/ip"}}'
  role = "hbase-hdfs-master"
  port = "50070"
  res = urllib2.urlopen("http://%s:%s/jmx" % (ip, port))
  pjson = json.loads(res.read())
  status = parse_hbase_stat(role, pjson)
  print json.dumps(stats)