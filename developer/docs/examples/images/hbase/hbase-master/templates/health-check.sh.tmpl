#!/bin/sh

HM=`date -d "now" +%H%M`
if [ $HM -eq "0200" ];then
  find /bigdata1/hbase/logs -type f -mtime +7 -name "hbase-root-*" -delete &
  find /bigdata1/hbase/logs -type f -mtime +7 -name "SecurityAuth.audit.*" -delete &
  find /bigdata1/hadoop/logs -type f -mtime +7 -name "hadoop-root-*" -delete &
fi
hour=-1
{{if exists "/env/qingcloud.hbase.major.compact.hour"}}
hour={{getv "/env/qingcloud.hbase.major.compact.hour" "3"}}
{{end}}
if [ $hour -ge 0 ];then
  hour_min=`expr $hour \* 100`
  hour_max=`expr $hour_min + 1`
  if [ $HM -ge $hour_min ] && [ $HM -lt $hour_max ];then
    result=`echo "list" | /opt/hbase/bin/hbase shell`
    tables=`echo $result | awk '{a=index($0,\"[\");b=index($0,\"]\");print substr($0,a+1,b-a-1)}'`
    for item in `echo $tables | awk -F',' '{for( i=1;i<=NF; i++ ) print $i}'`
      do
      {
      echo \"major_compact $item\" | /opt/hbase/bin/hbase shell
      }&
    done
  fi
fi


pid=`ps aux | grep java | grep HMaster | grep -v grep| awk '{print $1}'`
if [ "x$pid" = "x" ]
then
 echo "HMaster is not running"
 exit 1
fi

{{range $i, $host := ls (printf "/hosts/hbase-master")}}
  {{if eq $i 0}}
    {{$ip := printf "/hosts/hbase-master/%s/ip" $host}}
    {{$ip := getv $ip}}
    {{$local_ip := getv "/host/ip"}}
    {{if eq $ip $local_ip}}
      pid=`ps aux | grep java | grep RESTServer | grep -v grep| awk '{print $1}'`
      if [ "x$pid" = "x" ]
      then
        echo "RESTServer is not running"
        exit 1
      fi

      pid=`ps aux | grep java | grep ThriftServer | grep -v grep| awk '{print $1}'`
      if [ "x$pid" = "x" ]
      then
        echo "RESTServer is not running"
        exit 1
      fi

      {{if exists "/env/qingcloud.phoenix.on.hbase.enable"}}
        phoenix={{getv "/env/qingcloud.phoenix.on.hbase.enable" "false"}}
        {{if exists "/env/phoenix.transactions.enabled"}}
          transactions={{getv "/env/phoenix.transactions.enabled" "false"}}
          if [ "$phoenix" = "true" ];then
            if [ "$transactions" = "true" ];then
              pid=`ps aux | grep java | grep -v grep | grep -v HMaster | grep RESTServer | grep -v ThriftServer | awk '{print $1}'`
              if [ "x$pid" = "x" ]
              then
                echo "Tephra is not running"
              exit 1
              fi
            fi
          fi
        {{end}}
      {{end}}
    {{end}}
  {{end}}
{{end}}